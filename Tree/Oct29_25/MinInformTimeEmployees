class Solution {
    int[] manager;
    int[] informTime;
    int n;
    Map<Integer, List<Integer>> mp;
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        this.n = n;
        this.informTime = informTime;
        this.manager = manager;
        mp = new HashMap<>();
        for(int i=0; i<n; i++){
            if(manager[i]==-1)continue;
            mp.putIfAbsent(manager[i], new ArrayList<>());
            mp.get(manager[i]).add(i);
        }
        return helper(headID);

    }
    public int helper(int headId){
        if(headId>=n)return 0;
        if(mp.get(headId)==null)return 0;
        int mx = 0;
        for(int subordinate: mp.get(headId)){
            mx = Math.max(mx, informTime[headId] + helper(subordinate));
        }
        return mx;
    }
}